{"ast":null,"code":"var _jsxFileName = \"/Users/xiaochentian/Desktop/43008_RL_Reinforcement_Learning/Assignment3/43008_RL_MiniHack/src/TileInfoList.js\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Col, ListGroupItem, ListGroup, Row } from \"react-bootstrap\"; // Scrollable list of tiles with names next to them... maybe a text search for drilling down?\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass TileInfoList extends Component {\n  constructor(props) {\n    super();\n  }\n\n  render() {\n    // Create and display list of tiles\n    const tileInfos = [];\n    const allTiles = this.props.tileset.getTiles();\n\n    for (const categoryName in allTiles) {\n      const category = allTiles[categoryName];\n\n      const categoryHeader = /*#__PURE__*/_jsxDEV(ListGroupItem, {\n        className: \"ep-tiles-selection-title\",\n        children: categoryName\n      }, categoryName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this);\n\n      tileInfos.push(categoryHeader);\n      const clickableTiles = [];\n\n      for (let t = 0; t < category.length; t++) {\n        const tileData = category[t];\n\n        if (tileData.visibleInEditor) {\n          const className = \"ep-tiles-selection-item-tile\" + (this.props.selectedTile.tileId === tileData.tileId ? \" selected\" : \" selectable\");\n\n          const clickableTile = /*#__PURE__*/_jsxDEV(Col, {\n            onClick: () => this.props.onTileSelect(tileData),\n            className: className,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"tilesets/nethack/\" + tileData.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, tileData.tileId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this); // const tileInfo = <ListGroupItem key={tileId} onClick={() => this.props.onTileSelect(tileId)} className={className}><TileInfo tileData={tileData} /></ListGroupItem>\n\n\n          clickableTiles.push(clickableTile);\n        }\n      }\n\n      const tilesFlexbox = /*#__PURE__*/_jsxDEV(ListGroupItem, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"ep-tiles-selection-item\",\n          children: clickableTiles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, categoryName + \"_tiles\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n\n      tileInfos.push(tilesFlexbox);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            className: \"ep-tiles-selection-scroll\",\n            children: tileInfos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nTileInfoList.propTypes = {\n  tileset: PropTypes.any,\n  onTileSelect: PropTypes.func,\n  selectedTile: PropTypes.any\n};\nTileInfoList.defaultProps = {\n  tileset: {},\n  onTileSelect: () => {},\n  selectedTile: -1\n};\nexport default TileInfoList;","map":{"version":3,"sources":["/Users/xiaochentian/Desktop/43008_RL_Reinforcement_Learning/Assignment3/43008_RL_MiniHack/src/TileInfoList.js"],"names":["PropTypes","React","Component","Col","ListGroupItem","ListGroup","Row","TileInfoList","constructor","props","render","tileInfos","allTiles","tileset","getTiles","categoryName","category","categoryHeader","push","clickableTiles","t","length","tileData","visibleInEditor","className","selectedTile","tileId","clickableTile","onTileSelect","image","tilesFlexbox","propTypes","any","func","defaultProps"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,aAAd,EAA6BC,SAA7B,EAAwCC,GAAxC,QAAmD,iBAAnD,C,CAEA;;;;;AACA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AACnCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,SAAS,GAAG,EAAlB;AACA,UAAMC,QAAQ,GAAG,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,QAAnB,EAAjB;;AACA,SAAK,MAAMC,YAAX,IAA2BH,QAA3B,EAAqC;AACnC,YAAMI,QAAQ,GAAGJ,QAAQ,CAACG,YAAD,CAAzB;;AAEA,YAAME,cAAc,gBAClB,QAAC,aAAD;AAAe,QAAA,SAAS,EAAC,0BAAzB;AAAA,kBAAwEF;AAAxE,SAAyDA,YAAzD;AAAA;AAAA;AAAA;AAAA,cADF;;AAGAJ,MAAAA,SAAS,CAACO,IAAV,CAAeD,cAAf;AAEA,YAAME,cAAc,GAAG,EAAvB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAAQ,CAACK,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,cAAME,QAAQ,GAAGN,QAAQ,CAACI,CAAD,CAAzB;;AACA,YAAIE,QAAQ,CAACC,eAAb,EAA8B;AAC5B,gBAAMC,SAAS,GACb,kCACC,KAAKf,KAAL,CAAWgB,YAAX,CAAwBC,MAAxB,KAAmCJ,QAAQ,CAACI,MAA5C,GACG,WADH,GAEG,aAHJ,CADF;;AAKA,gBAAMC,aAAa,gBACjB,QAAC,GAAD;AACE,YAAA,OAAO,EAAE,MAAM,KAAKlB,KAAL,CAAWmB,YAAX,CAAwBN,QAAxB,CADjB;AAEE,YAAA,SAAS,EAAEE,SAFb;AAAA,mCAKE;AAAK,cAAA,GAAG,EAAE,sBAAsBF,QAAQ,CAACO;AAAzC;AAAA;AAAA;AAAA;AAAA;AALF,aAGOP,QAAQ,CAACI,MAHhB;AAAA;AAAA;AAAA;AAAA,kBADF,CAN4B,CAgB5B;;;AACAP,UAAAA,cAAc,CAACD,IAAf,CAAoBS,aAApB;AACD;AACF;;AAED,YAAMG,YAAY,gBAChB,QAAC,aAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,oBAA0CX;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF,SAAoBJ,YAAY,GAAG,QAAnC;AAAA;AAAA;AAAA;AAAA,cADF;;AAKAJ,MAAAA,SAAS,CAACO,IAAV,CAAeY,YAAf;AACD;;AAED,wBACE;AAAA,6BACE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC,2BAArB;AAAA,sBACGnB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAWD;;AA5DkC;;AA+DrCJ,YAAY,CAACwB,SAAb,GAAyB;AACvBlB,EAAAA,OAAO,EAAEb,SAAS,CAACgC,GADI;AAEvBJ,EAAAA,YAAY,EAAE5B,SAAS,CAACiC,IAFD;AAGvBR,EAAAA,YAAY,EAAEzB,SAAS,CAACgC;AAHD,CAAzB;AAMAzB,YAAY,CAAC2B,YAAb,GAA4B;AAC1BrB,EAAAA,OAAO,EAAE,EADiB;AAE1Be,EAAAA,YAAY,EAAE,MAAM,CAAE,CAFI;AAG1BH,EAAAA,YAAY,EAAE,CAAC;AAHW,CAA5B;AAMA,eAAelB,YAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Col, ListGroupItem, ListGroup, Row } from \"react-bootstrap\";\n\n// Scrollable list of tiles with names next to them... maybe a text search for drilling down?\nclass TileInfoList extends Component {\n  constructor(props) {\n    super();\n  }\n\n  render() {\n    // Create and display list of tiles\n    const tileInfos = [];\n    const allTiles = this.props.tileset.getTiles();\n    for (const categoryName in allTiles) {\n      const category = allTiles[categoryName];\n\n      const categoryHeader = (\n        <ListGroupItem className=\"ep-tiles-selection-title\" key={categoryName}>{categoryName}</ListGroupItem>\n      );\n      tileInfos.push(categoryHeader);\n\n      const clickableTiles = [];\n      for (let t = 0; t < category.length; t++) {\n        const tileData = category[t];\n        if (tileData.visibleInEditor) {\n          const className =\n            \"ep-tiles-selection-item-tile\" +\n            (this.props.selectedTile.tileId === tileData.tileId\n              ? \" selected\"\n              : \" selectable\");\n          const clickableTile = (\n            <Col\n              onClick={() => this.props.onTileSelect(tileData)}\n              className={className}\n              key={tileData.tileId}\n            >\n              <img src={\"tilesets/nethack/\" + tileData.image} />\n            </Col>\n          );\n\n          // const tileInfo = <ListGroupItem key={tileId} onClick={() => this.props.onTileSelect(tileId)} className={className}><TileInfo tileData={tileData} /></ListGroupItem>\n          clickableTiles.push(clickableTile);\n        }\n      }\n      \n      const tilesFlexbox = (\n        <ListGroupItem key={categoryName + \"_tiles\"}>\n          <Row className=\"ep-tiles-selection-item\">{clickableTiles}</Row>\n        </ListGroupItem>\n      );\n      tileInfos.push(tilesFlexbox);\n    }\n\n    return (\n      <>\n        <Row>\n          <Col>\n            <ListGroup className=\"ep-tiles-selection-scroll\">\n              {tileInfos}\n            </ListGroup>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nTileInfoList.propTypes = {\n  tileset: PropTypes.any,\n  onTileSelect: PropTypes.func,\n  selectedTile: PropTypes.any,\n};\n\nTileInfoList.defaultProps = {\n  tileset: {},\n  onTileSelect: () => {},\n  selectedTile: -1,\n};\n\nexport default TileInfoList;\n"]},"metadata":{},"sourceType":"module"}