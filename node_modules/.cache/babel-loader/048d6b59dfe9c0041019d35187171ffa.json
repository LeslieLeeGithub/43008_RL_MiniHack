{"ast":null,"code":"function TileData(category, name, id, wikiLink, image, glyphChar) {\n  let visibleInEditor = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;\n  let maxInstances = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : -1;\n  this.category = category;\n  this.name = name;\n  this.tileId = id;\n  this.wikiLink = wikiLink;\n  this.image = image;\n  this.glyphChar = glyphChar;\n  this.visibleInEditor = visibleInEditor;\n  this.maxInstances = maxInstances;\n}\n\n_c = TileData;\n\nfunction createTileIdKey(categoryName, t) {\n  return categoryName + \"-\" + t;\n}\n\nclass TileSet {\n  constructor() {\n    this.preprocessTiles = tileConfig => {\n      for (let c = 0; c < tileConfig.length; c++) {\n        const category = tileConfig[c];\n        const categoryObjects = category.objects;\n        this.allTiles[category.class] = [];\n\n        for (let t = 0; t < categoryObjects.length; t++) {\n          const tile = categoryObjects[t];\n          const tileData = new TileData(category.class, tile.name, createTileIdKey(category.class, t), tile.wiki_link, tile.image, tile.glyph.character, tile.visible_in_editor, tile.max_instances);\n          this.allTiles[category.class].push(tileData);\n        }\n      }\n    };\n\n    this.getTiles = () => {\n      return this.allTiles;\n    };\n\n    this.allTiles = {};\n  }\n\n}\n\nexport default TileSet;\nexport { createTileIdKey };\n\nvar _c;\n\n$RefreshReg$(_c, \"TileData\");","map":{"version":3,"sources":["/Users/xiaochentian/Desktop/43008_RL_Reinforcement_Learning/Assignment3/43008_RL_MiniHack/src/TileSet.js"],"names":["TileData","category","name","id","wikiLink","image","glyphChar","visibleInEditor","maxInstances","tileId","createTileIdKey","categoryName","t","TileSet","constructor","preprocessTiles","tileConfig","c","length","categoryObjects","objects","allTiles","class","tile","tileData","wiki_link","glyph","character","visible_in_editor","max_instances","push","getTiles"],"mappings":"AAAA,SAASA,QAAT,CACEC,QADF,EAEEC,IAFF,EAGEC,EAHF,EAIEC,QAJF,EAKEC,KALF,EAMEC,SANF,EASE;AAAA,MAFAC,eAEA,uEAFkB,IAElB;AAAA,MADAC,YACA,uEADe,CAAC,CAChB;AACA,OAAKP,QAAL,GAAgBA,QAAhB;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACA,OAAKO,MAAL,GAAcN,EAAd;AACA,OAAKC,QAAL,GAAgBA,QAAhB;AACA,OAAKC,KAAL,GAAaA,KAAb;AACA,OAAKC,SAAL,GAAiBA,SAAjB;AACA,OAAKC,eAAL,GAAuBA,eAAvB;AACA,OAAKC,YAAL,GAAoBA,YAApB;AACD;;KAlBQR,Q;;AAoBT,SAASU,eAAT,CAAyBC,YAAzB,EAAuCC,CAAvC,EAA0C;AACxC,SAAOD,YAAY,GAAG,GAAf,GAAqBC,CAA5B;AACD;;AAED,MAAMC,OAAN,CAAc;AACZC,EAAAA,WAAW,GAAG;AAAA,SAIdC,eAJc,GAIKC,UAAD,IAAgB;AAChC,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,cAAMhB,QAAQ,GAAGe,UAAU,CAACC,CAAD,CAA3B;AACA,cAAME,eAAe,GAAGlB,QAAQ,CAACmB,OAAjC;AACA,aAAKC,QAAL,CAAcpB,QAAQ,CAACqB,KAAvB,IAAgC,EAAhC;;AACA,aAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,eAAe,CAACD,MAApC,EAA4CN,CAAC,EAA7C,EAAiD;AAC/C,gBAAMW,IAAI,GAAGJ,eAAe,CAACP,CAAD,CAA5B;AAEA,gBAAMY,QAAQ,GAAG,IAAIxB,QAAJ,CACfC,QAAQ,CAACqB,KADM,EAEfC,IAAI,CAACrB,IAFU,EAGfQ,eAAe,CAACT,QAAQ,CAACqB,KAAV,EAAiBV,CAAjB,CAHA,EAIfW,IAAI,CAACE,SAJU,EAKfF,IAAI,CAAClB,KALU,EAMfkB,IAAI,CAACG,KAAL,CAAWC,SANI,EAOfJ,IAAI,CAACK,iBAPU,EAQfL,IAAI,CAACM,aARU,CAAjB;AAWA,eAAKR,QAAL,CAAcpB,QAAQ,CAACqB,KAAvB,EAA8BQ,IAA9B,CAAmCN,QAAnC;AACD;AACF;AACF,KA1Ba;;AAAA,SA4BdO,QA5Bc,GA4BH,MAAM;AACf,aAAO,KAAKV,QAAZ;AACD,KA9Ba;;AACZ,SAAKA,QAAL,GAAgB,EAAhB;AACD;;AAHW;;AAkCd,eAAeR,OAAf;AACA,SAASH,eAAT","sourcesContent":["function TileData(\n  category,\n  name,\n  id,\n  wikiLink,\n  image,\n  glyphChar,\n  visibleInEditor = true,\n  maxInstances = -1,\n) {\n  this.category = category;\n  this.name = name;\n  this.tileId = id;\n  this.wikiLink = wikiLink;\n  this.image = image;\n  this.glyphChar = glyphChar;\n  this.visibleInEditor = visibleInEditor;\n  this.maxInstances = maxInstances;\n}\n\nfunction createTileIdKey(categoryName, t) {\n  return categoryName + \"-\" + t;\n}\n\nclass TileSet {\n  constructor() {\n    this.allTiles = {};\n  }\n\n  preprocessTiles = (tileConfig) => {\n    for (let c = 0; c < tileConfig.length; c++) {\n      const category = tileConfig[c];\n      const categoryObjects = category.objects;\n      this.allTiles[category.class] = [];\n      for (let t = 0; t < categoryObjects.length; t++) {\n        const tile = categoryObjects[t];\n\n        const tileData = new TileData(\n          category.class,\n          tile.name,\n          createTileIdKey(category.class, t),\n          tile.wiki_link,\n          tile.image,\n          tile.glyph.character,\n          tile.visible_in_editor,\n          tile.max_instances\n        );\n\n        this.allTiles[category.class].push(tileData);\n      }\n    }\n  };\n\n  getTiles = () => {\n    return this.allTiles;\n  };\n}\n\nexport default TileSet;\nexport { createTileIdKey };\n"]},"metadata":{},"sourceType":"module"}